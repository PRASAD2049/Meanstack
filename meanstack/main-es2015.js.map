{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/create-post/create-post.component.html","./src/app/create-post/create-post.component.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/post-list/post-list.component.html","./src/app/post-list/post-list.component.ts","./src/app/post-list/post.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostListComponent } from './post-list/post-list.component';\nimport { CreatePostComponent } from './create-post/create-post.component';\n\n\n\nconst routes: Routes = [\n  {path:'',component:PostListComponent,pathMatch:'full' },\n  {path:'create',component:CreatePostComponent},\n  {path:'edit/:postId',component:CreatePostComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<!-- <app-create-post></app-create-post>\n<app-post-list></app-post-list> -->\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meanstack';\n\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport { PostListComponent } from './post-list/post-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreatePostComponent,\n    PostListComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"form-wrapper\">\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n        <form class=\"example-form\" #form=\"ngForm\" (submit)=\"onSubmit(form)\" *ngIf=\"!isLoading\" >\n          <div>\n            <mat-form-field class=\"example-full-width\">\n                <input matInput placeholder=\"Enter post title\" name=\"posttitle\" [(ngModel)]=\"posttitle\" required  #post_title>\n              </mat-form-field>\n              <mat-error *ngIf=\"form.form.controls.posttitle?.invalid && form.form.controls.posttitle?.touched\">\n            <span *ngIf=\"form.form.controls.posttitle.errors.required\">Title is required</span>\n              </mat-error>\n        </div>\n        <div>\n          <mat-form-field class=\"example-full-width\">\n            <textarea matInput placeholder=\"Enter post message\" name=\"postmessage\" [(ngModel)]=\"postmessage\" required></textarea>\n          </mat-form-field>\n          <mat-error *ngIf=\"form.form.controls.postmessage?.invalid && form.form.controls.postmessage?.touched\">\n              <span *ngIf=\"form.form.controls.postmessage.errors.required\">Message is Required</span>\n          </mat-error>\n        </div>\n          <button mat-raised-button mat-button type=\"submit\" [color]=\"'pink'\" >SUBMIT</button>\n          \n        </form>\n        </div>","import { Component, OnInit } from '@angular/core';\nimport { PostService } from '../post-list/post.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { post } from '../post-list/post.model';\nimport { stringify } from 'querystring';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css']\n})\nexport class CreatePostComponent implements OnInit {\n\n  public postId=null;\n  public mode = 'create';\n  public post:post;\n  posttitle=\"\"\n  postmessage=\"\";\n  public isLoading = false;\n  constructor(public postService:PostService,public route:ActivatedRoute) { }\n\n  ngOnInit() {\n      const param = this.route.paramMap.subscribe(paramMap => {\n        if( paramMap.has('postId') ){\n          this.mode = 'edit';\n          this.postId = paramMap.get('postId');\n          this.isLoading = true;\n          this.postService.getPost(this.postId).subscribe(postData => {\n            console.log(postData);\n            this.post = {id:postData['_id'],posttitle:postData['posttitle'],postmessage:postData['postmessage']}\n            this.posttitle = this.post.posttitle;\n            this.postmessage = this.post.postmessage;\n            this.isLoading = false;\n          });\n         \n        //  console.log(this.post)\n        }\n        else{\n          this.mode = \"create\";\n          this.postId = null;\n        }\n      });\n  }\n\n  onSubmit(form){\n    if(form.valid){\n    console.log(form.value)\n    this.isLoading = true;\n    if(this.mode == \"create\"){\nthis.postService.createPost(form.value);\n}\nelse {\n  this.postService.updatePost(this.postId,this.posttitle,this.postmessage);\n  }\n\n}\n  }\n}","<nav>\n    <ul>\n        <li>\n            <a [routerLink]=\"['']\">Posts</a>\n        </li>\n        <li>\n            <a [routerLink]=\"['create']\">Add Post</a>\n        </li>\n    </ul>\n\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"post-list\" >\n<mat-accordion *ngIf=\"posts.length > 0 && !isLoading\">\n\n        <mat-expansion-panel *ngFor=\"let post of posts\">\n          <mat-expansion-panel-header>\n            <mat-panel-title>\n              {{post.posttitle}}\n            </mat-panel-title>\n           \n          </mat-expansion-panel-header>\n          {{post.postmessage}}\n          <div>\n          <button type=\"button\" (click)=\"onDelete(post.id)\" >Delete</button>\n          <button type=\"button\" [routerLink]=\"['edit',post.id]\">Edit</button>\n        </div>\n        </mat-expansion-panel>\n\n      \n      </mat-accordion>\n   \n    <div *ngIf=\"posts.length <= 0 && !isLoading\" >\n            <h3>There are no posts</h3>\n    </div>\n    <div>\n      <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n    </div>\n    <div>\n        <mat-paginator [length]=\"100\" [pageSize]=\"postsPerPage\" [pageSizeOptions]=\"[5, 10, 25, 100]\" (page)=\"onPaginationchange($event)\"></mat-paginator>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PostService } from './post.service';\nimport { post } from './post.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit {\n\n  public posts:any[] = [];\n  public isLoading=false;\n  postsPerPage = 2;\n  currentPage = 1;\n  constructor(public postService:PostService,public http:HttpClient) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n   this.postService.getPosts(this.postsPerPage,1);\n   this.postService.getUpdatedPostsListener().subscribe( (posts:post[]) => {\n   this.posts = posts;\n this.isLoading = false;\n   } )\n  }\n\n  onDelete(postId){\n    console.log(postId)\n     this.postService.deletePost(postId);\n  }\n  onPaginationchange(paginationData){\nconsole.log(paginationData);\n\nthis.postsPerPage = paginationData.pageSize;\nthis.currentPage = paginationData.pageIndex + 1;\nthis.postService.getPosts(this.postsPerPage, this.currentPage);\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { post } from '../post-list/post.model';\nimport {map} from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  posts = [\n    // {posttitle:'Title1',postmessage:'Message1'},\n    // {posttitle:'Title2',postmessage:'Message2'},\n    // {posttitle:'Title3',postmessage:'Message3'}\n  ];\n  private postSubject = new Subject();\n  constructor( private http:HttpClient,private route:ActivatedRoute,private router:Router ) { }\n\ncreatePost(post){\n  console.log(post)\n\n  this.http.post<{message:string}>('http://localhost:3000/api/posts',post).subscribe( data => {\n    \n    this.getPosts();\n    this.router.navigate([''])\n    \n  });\n\n}\n\nupdatePost( id:string,title:string,message:string ){\n  const post:post = {id:id,posttitle:title,postmessage:message};\n  this.http.put('http://localhost:3000/api/posts/'+id,post).subscribe(result => {\n    this.router.navigate([''])\n  })\n}\n\ngetPosts(postsperPage?: number, currentPage?: number) {\n\n  const queryParams = `?pagesize=${postsperPage}&page=${currentPage}`;\n\n return this.http.get<{'message': string, posts: any}>('http://localhost:3000/api/posts'+queryParams)\n .pipe(\n   map( postData => {\n     return postData.posts.map ( (post) => {\n       return {\n         posttitle: post.posttitle,\n         postmessage: post.postmessage,\n         id: post._id\n       };\n     } );\n   })\n )\n .subscribe( transformedPosts => {\n   console.log(transformedPosts)\n   this.posts =  transformedPosts;\n   this.postSubject.next([...this.posts]);\n });\n}\n\n\ngetPost(postId:string){\n  console.log(postId)\n    //return {...this.posts.find( p => p.id === postId )}\n    return this.http.get('http://localhost:3000/api/posts/'+postId)\n}\n\ngetUpdatedPostsListener(){\n  return this.postSubject.asObservable();\n}\n\ndeletePost(postId){\n  this.http.delete('http://localhost:3000/api/posts/'+postId).subscribe(message => {\n    console.log(message);\n   // this.getPosts();\n   this.posts = this.posts.filter( post => {\n     return post.id !== postId;\n   } )\n   this.postSubject.next([...this.posts]);\n  })\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}